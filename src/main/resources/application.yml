spring:
  profiles:
    active: local  #default profile
    group:
      local:
        - common
      prod:
        - common

---
spring:
  config:
    activate:
      on-profile: common
  thymeleaf:
    cache: false

resilience4j:
  circuitbreaker:
    configs:
      default:  # 기본 config 명
        registerHealthIndicator: true
        # COUNT_BASED(마지막 N번의 호출 결과를 기반), TIME_BASED(마지막 N초의 결과를 기반) (호출 결과를 저장하고 집계하기 위해 slidingWindow 사용)
        slidingWindowType: COUNT_BASED
        # COUNT_BASED: array크기, TIME_BASED: 초
        slidingWindowSize: 5
        # circuit을 동작시키기위한 최소한의 call 수
        minimumNumberOfCalls: 1
        slowCallRateThreshold: 100
        slowCallDurationThreshold: 60000
        failureRateThreshold: 50 # 실패율 임계값(50%)
        permittedNumberOfCallsInHalfOpenState: 3
        # 서킷의 상태가 Open 에서 Half-open 으로 변경되기전에 Circuit Break가 기다리는 시간[s](HALF_OPEN 상태로 빨리 전환되어 장애가 복구 될 수 있도록)
        waitDurationInOpenState: 20s
    instances:
      circuit-sample-common: # circuitbreaker name
        baseConfig: default # 기본 config 지정
      circuit-sample-3000:
        baseConfig: default
        slowCallDurationThreshold: 3000 # 응답시간이 느린것으로 판단할 기준 시간 [ms]

naver:
  client:
    id: ${X_NAVER_ID}
    secret: ${X_NAVER_CLIENT_SECRET}
  url:
    search:
      local: https://openapi.naver.com/v1/search/local.json
      image: https://openapi.naver.com/v1/search/image.json
      blog: https://openapi.naver.com/v1/search/blog.json

kakao:
  rest:
    api:
      key: ${KAKAO_REST_API_KEY}


server:
  servlet:
    encoding:
      force-response: true


---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    driverClassName=org:
      h2:
        Driver:
          url: jdbc:h2:mem:testdb;./testDB;AUTO_SERVER=TRUE; #DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
          username: sa
          password:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3307/api?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
        show_sql: true


---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    driverClassName=org:
      h2:
        Driver:
          url: jdbc:h2:mem:testdb;./testDB;AUTO_SERVER=TRUE; #DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
          username: sa
          password:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://database-1.c5aek8m6e48r.ap-northeast-2.rds.amazonaws.com:3307/api?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        show_sql: true




